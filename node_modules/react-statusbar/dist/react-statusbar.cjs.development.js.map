{"version":3,"file":"react-statusbar.cjs.development.js","sources":["../src/cls.ts","../src/Statusbar/Dropdown.tsx","../src/Statusbar/index.tsx","../src/Statusbar/Button.tsx","../src/Statusbar/Label.tsx","../src/Statusbar/Progress.tsx"],"sourcesContent":["export function cls(\n  ...classNames: (string | Record<string, boolean> | undefined | null)[]\n) {\n  let result = '';\n\n  for (const item of classNames) {\n    if (!item) {\n      continue;\n    }\n\n    if (typeof item === 'string') {\n      result += item + ' ';\n      continue;\n    }\n\n    for (const key of Object.keys(item)) {\n      if (item[key] === true) {\n        result += key + ' ';\n      }\n    }\n  }\n\n  return result;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport styles from './Dropdown.module.scss';\nimport buttonStyles from './Button.module.scss';\nimport { cls } from '../cls';\n\nexport interface DropdownOption {\n  key: React.ReactText;\n  type?: 'separator' | 'button';\n  label?: React.ReactNode;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nexport interface DropdownProps {\n  className?: string;\n  menuClassName?: string;\n  searchable?: boolean;\n  options: DropdownOption[];\n  children: React.ReactNode;\n}\n\nconst stopPropagation = (\n  e: React.MouseEvent | React.TouchEvent | React.KeyboardEvent\n) => {\n  e.stopPropagation();\n};\n\nexport const Dropdown: React.FC<DropdownProps> = ({\n  children,\n  options,\n  className,\n  menuClassName,\n  searchable = false\n}) => {\n  const [open, setOpen] = useState(false);\n  const [search, setSearch] = useState('');\n  const toggle = useCallback(() => {\n    setOpen(open => !open);\n    setSearch('');\n  }, [setOpen, setSearch]);\n  const close = useCallback(() => {\n    setOpen(false);\n    setSearch('');\n  }, [setOpen, setSearch]);\n\n  useEffect(() => {\n    window.addEventListener('mousedown', close);\n    window.addEventListener('touchstart', close);\n\n    return () => {\n      window.removeEventListener('mousedown', close);\n      window.removeEventListener('touchstart', close);\n    };\n  }, [close]);\n\n  return (\n    <button\n      onClick={toggle}\n      className={cls(\n        buttonStyles.button,\n        styles.button,\n        {\n          [buttonStyles.active]: open\n        },\n        className\n      )}\n    >\n      {children}\n      <div\n        className={cls(\n          styles.dropdown,\n          {\n            [styles.open]: open\n          },\n          menuClassName\n        )}\n        onMouseDown={stopPropagation}\n        onTouchStart={stopPropagation}\n      >\n        {searchable && (\n          <div className={styles.search} onClick={stopPropagation}>\n            <input\n              type=\"search\"\n              placeholder=\"Search...\"\n              value={search}\n              onChange={e => setSearch(e.target.value)}\n            />\n          </div>\n        )}\n        {options\n          .filter(\n            option =>\n              search === '' ||\n              option.label\n                ?.toString()\n                .toLowerCase()\n                .includes(search.toLowerCase())\n          )\n          .map(option => {\n            if (option.type === 'separator') {\n              return <div className={styles.separator} key={option.key}></div>;\n            }\n\n            return (\n              <button\n                className={cls(buttonStyles.button, styles.option)}\n                key={option.key}\n                onClick={option.onClick}\n              >\n                {option.label}\n              </button>\n            );\n          })}\n      </div>\n    </button>\n  );\n};\n","import React, { ReactNode, useMemo } from 'react';\nimport { cls } from '../cls';\n\nimport styles from './index.module.scss';\n\nconst defaultFontFamily =\n  \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\";\n\nexport interface StatusbarTheme {\n  primaryColor: string;\n  backgroundColor: string;\n  fontFamily?: string;\n}\n\nexport interface StatusbarProps {\n  theme?: 'dark' | 'light' | StatusbarTheme;\n  height?: string;\n  className?: string;\n  left?: ReactNode;\n  right?: ReactNode;\n  placement?: 'bottom' | 'block';\n}\n\nexport const Statusbar: React.FC<StatusbarProps> = ({\n  theme = 'dark',\n  height,\n  left,\n  right,\n  className,\n  placement = 'bottom'\n}) => {\n  const style = useMemo<any>(() => {\n    const styles: any = {\n      height\n    };\n\n    switch (theme) {\n      case 'dark':\n        return {\n          ...styles,\n          '--statusbar-primary-color': '#eee',\n          '--statusbar-background-color': '#333',\n          '--statusbar-font-family': defaultFontFamily\n        };\n      case 'light':\n        return {\n          ...styles,\n          '--statusbar-primary-color': '#111',\n          '--statusbar-background-color': '#ddd',\n          '--statusbar-font-family': defaultFontFamily\n        };\n      default:\n        return {\n          ...styles,\n          '--statusbar-primary-color': theme.primaryColor,\n          '--statusbar-background-color': theme.backgroundColor,\n          '--statusbar-font-family': theme.fontFamily ?? defaultFontFamily\n        };\n    }\n  }, [theme, height]);\n\n  return (\n    <div\n      className={cls(\n        styles.statusbar,\n        styles['placement-' + placement],\n        className\n      )}\n      style={style}\n    >\n      <div className={styles.items}>{left}</div>\n      <div className={styles.items}>{right}</div>\n    </div>\n  );\n};\n\nexport * from './Button';\nexport * from './Dropdown';\nexport * from './Label';\nexport * from './Progress';\n","import React from 'react';\nimport { cls } from '../cls';\n\nimport styles from './Button.module.scss';\n\nexport type ButtonProps = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\nexport const Button: React.FC<ButtonProps> = props => {\n  return <button {...props} className={cls(styles.button, props.className)} />;\n};\n","import React from 'react';\nimport { cls } from '../cls';\n\nimport styles from './Label.module.scss';\n\nexport interface LabelProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const Label: React.FC<LabelProps> = ({ className, children }) => {\n  return <div className={cls(styles.label, className)}>{children}</div>;\n};\n","import React, { ReactNode, useMemo } from 'react';\n\nimport styles from './Progress.module.scss';\nimport { cls } from '../cls';\n\nexport interface ProgressProps {\n  className?: string;\n  label?: ReactNode;\n  value?: number;\n  max?: number;\n  width?: number;\n}\n\nexport const Progress: React.FC<ProgressProps> = ({\n  className,\n  value,\n  max,\n  label,\n  width\n}) => {\n  const percent = useMemo(\n    () =>\n      typeof value !== 'undefined' && max ? (value / max) * 100 : undefined,\n    [value, max]\n  );\n\n  return (\n    <div className={cls(styles.progress, className)} style={{ width }}>\n      <div className={styles.bar}>\n        <div\n          className={cls(styles.fill, {\n            [styles.marquee]: typeof percent === 'undefined'\n          })}\n          style={\n            typeof percent !== 'undefined'\n              ? { width: percent + '%' }\n              : undefined\n          }\n        ></div>\n        {typeof label !== 'undefined' && (\n          <div className={styles.label}>{label}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":["cls","result","classNames","item","Object","keys","key","stopPropagation","e","defaultFontFamily","props","React","className","styles","children","options","menuClassName","searchable","useState","open","setOpen","search","setSearch","toggle","useCallback","close","useEffect","window","addEventListener","removeEventListener","onClick","buttonStyles","onMouseDown","onTouchStart","type","placeholder","value","onChange","target","filter","option","label","_option$label","toString","toLowerCase","includes","map","max","width","percent","useMemo","undefined","style","theme","height","left","right","placement","primaryColor","backgroundColor","fontFamily","statusbar","items"],"mappings":"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"}